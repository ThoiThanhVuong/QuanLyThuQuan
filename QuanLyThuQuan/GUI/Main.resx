<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSlide.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAA6ySURBVHhe7d3L
        ilxVG8fhfyKYD8EDKB5RjJqY2CqC4Fi8ABPj4QI8BQ1ehkKik4AiTqOm04qgqOgVqEERJB5AwUiCGkUz
        VAeJfqxQo8UC7fTetVd3PQ/8bmC9xX67uqr2TgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAKWxKspTkiSQvJHk3yTdJTiY5neQf
        SdK6qFyzy7W7XMPLtfz5JI/PrvFwzpYkDyU5kuRU40UkSdpYlWv9cpIHZzuABbMjycve2UvSQld2QNkF
        ZSewwd2V5M0kZxsvBEnSYlZ2wkqSO+ulwfp3WZKDSc40Bi9JUqn8IXAoyRX1EmF9eiTJr41BS5LU6pck
        D9fLhPXjf7N3/fVgJUn6L5X/BlxULxf6dk2SzxvDlCRpNX2W5Op6ydCnrUm+awxRkqTz6XiS7fWyoS87
        Z5/d1MOTJGktlfsH+Llgp65L8kNjaJIkDVG5u+AN9fJhWuVnfl81hiVJ0pAdS3JJvYSYzluNIUmSNEZv
        1EuIaTzTGI4kSWP2VL2MmK9tSf5qDEaSpDH7M8nN9VJift5vDEWSpHn0Yb2UmI/yKMd6GJIkzbPd9XJi
        XJtm38SsByFJ0jwrv0DbXC8pxrOnMQRJkqZoV72kGM/RxgAkSZqij+slxTiWGocvSdKU3V4vK4Z3oHHw
        kiRN2XP1smJY5ct/5V7M9cFLkjRl5Vk0jKg87a8+dEmSeqjcnI6R7GscuCRJPbS3XloMZ6Vx4JIk9dBy
        vbQYzpeNA5ckqYe+qJcWw7hg9vCF+sAlSeqhsqPKrmJgNzUOW5KknrqxXl6s3T2Ng5YkqafurpcXa3df
        46AlSeqpe+vlxdqVhy3UBy1JUk/dXy8v1s4fAJKk3vMHwAh8BCBJ6j0fAYzAlwAlSb3nS4Aj8DNASVLv
        +RngCNwISJLUc24ENCK3ApYk9ZpbAY/oSOPAJUnqocP10mI4TzcOXJKkHnqyXloMZ0fjwCVJ6qFb6qXF
        sE40Dl2SpCn7vl5WDG9/4+AlSZqyZ+tlxfBuaxy8JElTtlQvK8bxSePwJUmaoo/qJcV4HmgMQJKkKfIA
        oDnalORYYwiSJM2zcoO6zfWSYlz+CyBJmjrv/ifyXmMYkiTNow/qpcT8lJsueECQJGne/TF7Si0T2tcY
        jCRJY7a3XkZM4/XGcCRJGqOVegkxnUv9KkCSNIfKI38vrpcQ07o2yfHGsCRJGqKTSa6vlw99KE8LPNUY
        miRJa+nnJLfWS4e+bE3ybWN4kiSdT+VJf9vqZUOfrkryaWOIkiStpqNJrqyXDH3bkuRgkr8bA5Uk6d96
        ZbZLWKf2+F6AJGkVlc/7y+3m2QDKzwTLfwPONAYtSVLpbJJDSS6vlwjr3x1JlmdDrgcvSVrMypvDw0mW
        6qXBxrM9yUtJfm+8ECRJi9FvSV6c7QQWzIVJdid5LclPjReHJGlj9WOSV5Psmu0AOGdnkseSHEjyTpKv
        k5xIcrrxIpIk9Vm5Zpdrd7mGv51kf5JHZzeLAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDRbEqylOSJJC8keTfJN0lOJjmd5B9J0rqo
        XLPLtbtcw8u1/Pkkj8+u8XDOliQPJTmS5FTjRSRJ2liVa/1ykgdnO4AFsyPJy97ZS9JCV3ZA2QVlJ7DB
        3ZXkzSRnGy8ESdJiVnbCSpI766XB+ndZkoNJzjQGL0lSqfwhcCjJFfUSYX16JMmvjUFLktTqlyQP18uE
        9eN/s3f99WAlSfovlf8GXFQvF/p2TZLPG8OUJGk1fZbk6nrJ0KetSb5rDFGSpPPpeJLt9bKhLztnn93U
        w5MkaS2V+wf4uWCnrkvyQ2NokiQNUbm74A318mFa5Wd+XzWGJUnSkB1Lckm9hJjOW40hSZI0Rm/US4hp
        PNMYjiRJY/ZUvYyYr21J/moMRpKkMfszyc31UmJ+3m8MRZKkefRhvZSYj/Iox3oYkiTNs931cmJcm2bf
        xKwHIUnSPCu/QNtcLynGs6cxBEmSpmhXvaQYz9HGACRJmqKP6yXFOJYahy9J0pTdXi8rhnegcfCSJE3Z
        c/WyYljly3/lXsz1wUuSNGXlWTSMqDztrz50SZJ6qNycjpHsaxy4JEk9tLdeWgxnpXHgkiT10HK9tBjO
        l40DlySph76olxbDuGD28IX6wCVJ6qGyo8quYmA3NQ5bkqSeurFeXqzdPY2DliSpp+6ulxdrd1/joCVJ
        6ql76+XF2pWHLdQHLUlST91fLy/Wzh8AkqTe8wfACHwEIEnqPR8BjMCXACVJvedLgCPwM0BJUu/5GeAI
        3AhIktRzbgQ0IrcCliT1mlsBj+hI48AlSeqhw/XSYjhPNw5ckqQeerJeWgxnR+PAJUnqoVvqpcWwTjQO
        XZKkKfu+XlYMb3/j4CVJmrJn62XF8G5rHLwkSVO2VC8rxvFJ4/AlSZqij+olxXgeaAxAkqQp8gCgOdqU
        5FhjCJIkzbNyg7rN9ZJiXP4LIEmaOu/+J/JeYxiSJM2jD+qlxPyUmy54QJAkad79MXtKLRPa1xiMJElj
        trdeRkzj9cZwJEkao5V6CTGdS/0qQJI0h8ojfy+ulxDTujbJ8cawJEkaopNJrq+XD30oTws81RiaJElr
        6eckt9ZLh75sTfJtY3iSJJ1P5Ul/2+plQ5+uSvJpY4iSJK2mo0murJcMfduS5GCSvxsDlSTp33pltktY
        p/b4XoAkaRWVz/vL7ebZAMrPBMt/A840Bi1JUulskkNJLq+XCOvfHUmWZ0OuBy9JWszKm8PDSZbqpcHG
        sz3JS0l+b7wQJEmL0W9JXpztBBbMhUl2J3ktyU+NF4ckaWP1Y5JXk+ya7QA4Z2eSx5IcSPJOkq+TnEhy
        uvEikiT1Wblml2t3uYa/nWR/kkdnN4sDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgNFsSrKU5IkkLyR5N8k3SU4mOZ3kH0nSuqhcs8u1
        u1zDy7X8+SSPz67xcM6WJA8lOZLkVONFJEnaWJVr/XKSB2c7gAWzI8nL3tlL0kJXdkDZBWUnsMHdleTN
        JGcbLwRJ0mJWdsJKkjvrpcH6d1mSg0nONAYvSVKp/CFwKMkV9RJhfXokya+NQUuS1OqXJA/Xy4T143+z
        d/31YCVJ+i+V/wZcVC8X+nZNks8bw5QkaTV9luTqesnQp61JvmsMUZKk8+l4ku31sqEvO2ef3dTDkyRp
        LZX7B/i5YKeuS/JDY2iSJA1RubvgDfXyYVrlZ35fNYYlSdKQHUtySb2EmM5bjSFJkjRGb9RLiGk80xiO
        JElj9lS9jJivbUn+agxGkqQx+zPJzfVSYn7ebwxFkqR59GG9lJiP8ijHehiSJM2z3fVyYlybZt/ErAch
        SdI8K79A21wvKcazpzEESZKmaFe9pBjP0cYAJEmaoo/rJcU4lhqHL0nSlN1eLyuGd6Bx8JIkTdlz9bJi
        WOXLf+VezPXBS5I0ZeVZNIyoPO2vPnRJknqo3JyOkexrHLgkST20t15aDGelceCSJPXQcr20GM6XjQOX
        JKmHvqiXFsO4YPbwhfrAJUnqobKjyq5iYDc1DluSpJ66sV5erN09jYOWJKmn7q6XF2t3X+OgJUnqqXvr
        5cXalYct1ActSVJP3V8vL9bOHwCSpN7zB8AIfAQgSeo9HwGMwJcAJUm950uAI/AzQElS7/kZ4AjcCEiS
        1HNuBDQitwKWJPWaWwGP6EjjwCVJ6qHD9dJiOE83DlySpB56sl5aDGdH48AlSeqhW+qlxbBONA5dkqQp
        +75eVgxvf+PgJUmasmfrZcXwbmscvCRJU7ZULyvG8Unj8CVJmqKP6iXFeB5oDECSpCnyAKA52pTkWGMI
        kiTNs3KDus31kmJc/gsgSZo67/4n8l5jGJIkzaMP6qXE/JSbLnhAkCRp3v0xe0otE9rXGIwkSWO2t15G
        TOP1xnAkSRqjlXoJMZ1L/SpAkjSHyiN/L66XENO6NsnxxrAkSRqik0mur5cPfShPCzzVGJokSWvp5yS3
        1kuHvmxN8m1jeJIknU/lSX/b6mVDn65K8mljiJIkraajSa6slwx925LkYJK/GwOVJOnfemW2S1in9vhe
        gCRpFZXP+8vt5tkAys8Ey38DzjQGLUlS6WySQ0kur5cI698dSZZnQ64HL0lazMqbw8NJluqlwcazPclL
        SX5vvBAkSYvRb0lenO0EFsyFSXYneS3JT40XhyRpY/VjkleT7JrtADhnZ5LHkhxI8k6Sr5OcSHK68SKS
        JPVZuWaXa3e5hr+dZH+SR2c3iwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJvB/xhGC2aVIxP8AAAAASUVORK5CYII=
</value>
  </data>
</root>